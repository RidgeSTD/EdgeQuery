大图，10000000边，100000点，2000标签
python3.4
计算出入度树的深度, gitlog对应commit a9b4f4a7a5918492c11f0d, 邻居阈值d=1,在大图上做实验
====

hello world!
开始加载文件...
结束加载文件...
加载文件耗时 132.162282
原始数据内部排序耗时 8.001950999999991
开始统计邻居信息
统计邻居信息耗时 14.390912999999983
开始构建出入度表...
构建出入度表耗时 7.675412000000023
开始构建出入度树...
开始调整出入度树以最大化差异...
差异化出入度表耗时 22.039431000000008
开始深先遍历出入度树...
得到最大深度:148
开始调整出入度树以最大化差异...
差异化出入度表耗时 23.599715000000003
开始深先遍历出入度树...
得到最大深度:147
构建出入度树耗时 286.053543
出入度树节点数共计 19540657
开始加载查询文件...
分割第1 个查询耗时 0.00011399999999639476
统计查询信息耗时 4.3000000005122274e-05
加载查询共耗时 0.0015169999999784523
分割第2 个查询耗时 1.3999999964653398e-05
统计查询信息耗时 1.2000000026546331e-05
加载查询共耗时 0.0016439999999988686
分割第3 个查询耗时 8.999999977277184e-06
统计查询信息耗时 9.999999974752427e-06
加载查询共耗时 0.0017510000000129367
开始获取head映射...
获取head映射耗时 70.89607000000007
naive的head查询开始...
naive的head查询运行耗时 3.1146009999999933
查询内核启动...
查询内核运行耗时 0.0005030000000942891
查询0输出结果耗时 9.499999998752173e-05
查询0共计耗时 74.01242000000002
__locate_node调用次数: 2
__locate_node调用耗时: 70.38840500000003
开始获取head映射...
获取head映射耗时 0.8684600000000273
naive的head查询开始...
naive的head查询运行耗时 0.6990910000000667
查询内核启动...
查询内核运行耗时 5.999999984851456e-06
查询1输出结果耗时 0.0
查询1共计耗时 1.568292999999926
__locate_node调用次数: 2
__locate_node调用耗时: 0.005296000000043932
开始获取head映射...
获取head映射耗时 12.27027099999998
naive的head查询开始...
naive的head查询运行耗时 0.23624599999993734
no result
查询2输出结果耗时 0.0
查询2共计耗时 12.506889000000001
__locate_node调用次数: 1
__locate_node调用耗时: 0.00011599999993450183
